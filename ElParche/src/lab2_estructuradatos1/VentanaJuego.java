/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab2_estructuradatos1;

import java.awt.Image;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.JButton;
import javax.swing.JOptionPane;

public class VentanaJuego extends javax.swing.JFrame {

    /**
     * Creates new form VentanaJuego
     */
    EspacioJuego espacioJuego;
    private int jugActivo;
    private javax.swing.JLabel labeldadoActivo;
    private boolean pasar;
    private int seis = 0;
    private int intentos = 3;
    ArrayList<Jugador> ganadores;

    public VentanaJuego(String dir1, String dir2, String dir3) {
        initComponents();
        espacioJuego = new EspacioJuego(this, dir1, dir2, dir3);
        espacioJuego.setBounds(0, 0, this.getWidth() - 200, this.getHeight());
        this.add(espacioJuego);
        jugActivo = 1;
        mostrarJugActivo();
        txtSaltos.setEditable(false);
        txtSaltos.setVisible(false);
        btnMover.setEnabled(false);
        labeldadoActivo = null;
//        labelImgVerde.setVisible(false);
//        labelImgAmarilla.setVisible(false);
//        labelImgRoja.setVisible(false);
        labeldadoGif.setVisible(false);
        labeldado1.setVisible(false);
        labeldado2.setVisible(false);
        labeldado3.setVisible(false);
        labeldado4.setVisible(false);
        labeldado5.setVisible(false);
        labeldado6.setVisible(false);
        pasar = false;
        ganadores = new ArrayList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FinJuego = new javax.swing.JDialog(this, true);
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        labelGan1 = new javax.swing.JLabel();
        labelGan2 = new javax.swing.JLabel();
        labelPerd = new javax.swing.JLabel();
        labelFondoFin = new javax.swing.JLabel();
        btnMover = new javax.swing.JButton();
        txtSaltos = new javax.swing.JTextField();
        labelJugActivo = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnTirar = new javax.swing.JButton();
        labelImgRoja = new javax.swing.JLabel();
        labelImgVerde = new javax.swing.JLabel();
        labelImgAmarilla = new javax.swing.JLabel();
        labeldadoGif = new javax.swing.JLabel();
        labeldado1 = new javax.swing.JLabel();
        labeldado2 = new javax.swing.JLabel();
        labeldado3 = new javax.swing.JLabel();
        labeldado4 = new javax.swing.JLabel();
        labeldado5 = new javax.swing.JLabel();
        labeldado6 = new javax.swing.JLabel();
        labelfondo = new javax.swing.JLabel();

        FinJuego.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        FinJuego.setTitle("Fin del Juego");
        FinJuego.setLocation(new java.awt.Point(285, 50));
        FinJuego.setMinimumSize(new java.awt.Dimension(700, 600));
        FinJuego.setUndecorated(true);
        FinJuego.setResizable(false);
        FinJuego.setSize(new java.awt.Dimension(700, 600));
        FinJuego.getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Century Schoolbook", 0, 11)); // NOI18N
        jLabel1.setText("perdedor:");
        FinJuego.getContentPane().add(jLabel1);
        jLabel1.setBounds(410, 190, 160, 40);

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Juego terminado");
        FinJuego.getContentPane().add(jLabel3);
        jLabel3.setBounds(185, 20, 330, 50);

        jLabel4.setFont(new java.awt.Font("Century Schoolbook", 0, 11)); // NOI18N
        jLabel4.setText("Ganadores:");
        FinJuego.getContentPane().add(jLabel4);
        jLabel4.setBounds(70, 190, 160, 40);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/btnVolverMenu.png"))); // NOI18N
        jButton2.setBorder(null);
        jButton2.setContentAreaFilled(false);
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        FinJuego.getContentPane().add(jButton2);
        jButton2.setBounds(410, 440, 250, 80);
        FinJuego.getContentPane().add(labelGan1);
        labelGan1.setBounds(30, 240, 60, 60);
        FinJuego.getContentPane().add(labelGan2);
        labelGan2.setBounds(100, 240, 60, 60);
        FinJuego.getContentPane().add(labelPerd);
        labelPerd.setBounds(410, 240, 60, 60);

        labelFondoFin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/fondoAmar.png"))); // NOI18N
        FinJuego.getContentPane().add(labelFondoFin);
        labelFondoFin.setBounds(0, 0, 700, 600);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("El Parche");
        setPreferredSize(new java.awt.Dimension(1000, 700));
        setResizable(false);
        getContentPane().setLayout(null);

        btnMover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/btnMover.png"))); // NOI18N
        btnMover.setBorder(null);
        btnMover.setContentAreaFilled(false);
        btnMover.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMover.setFocusable(false);
        btnMover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoverActionPerformed(evt);
            }
        });
        getContentPane().add(btnMover);
        btnMover.setBounds(820, 140, 160, 60);
        getContentPane().add(txtSaltos);
        txtSaltos.setBounds(850, 200, 100, 30);

        labelJugActivo.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        getContentPane().add(labelJugActivo);
        labelJugActivo.setBounds(850, 50, 40, 40);

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 1, 18)); // NOI18N
        jLabel2.setText("Jugador Activo:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(820, 10, 160, 40);

        btnTirar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/btnTirar.png"))); // NOI18N
        btnTirar.setBorder(null);
        btnTirar.setContentAreaFilled(false);
        btnTirar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTirar.setFocusable(false);
        btnTirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTirarActionPerformed(evt);
            }
        });
        getContentPane().add(btnTirar);
        btnTirar.setBounds(830, 380, 150, 60);

        labelImgRoja.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/ficha_roja.png"))); // NOI18N
        getContentPane().add(labelImgRoja);
        labelImgRoja.setBounds(880, 40, 60, 60);

        labelImgVerde.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/ficha_verde.png"))); // NOI18N
        getContentPane().add(labelImgVerde);
        labelImgVerde.setBounds(880, 40, 60, 60);

        labelImgAmarilla.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/ficha_amarilla.png"))); // NOI18N
        getContentPane().add(labelImgAmarilla);
        labelImgAmarilla.setBounds(880, 40, 60, 60);

        labeldadoGif.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeldadoGif.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/dadoGif.gif"))); // NOI18N
        getContentPane().add(labeldadoGif);
        labeldadoGif.setBounds(825, 220, 150, 150);

        labeldado1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeldado1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/dado1.png"))); // NOI18N
        getContentPane().add(labeldado1);
        labeldado1.setBounds(825, 220, 150, 150);

        labeldado2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeldado2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/dado2.png"))); // NOI18N
        getContentPane().add(labeldado2);
        labeldado2.setBounds(825, 220, 150, 150);

        labeldado3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeldado3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/dado3.png"))); // NOI18N
        getContentPane().add(labeldado3);
        labeldado3.setBounds(825, 220, 150, 150);

        labeldado4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeldado4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/dado4.png"))); // NOI18N
        getContentPane().add(labeldado4);
        labeldado4.setBounds(825, 220, 150, 150);

        labeldado5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeldado5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/dado5.png"))); // NOI18N
        getContentPane().add(labeldado5);
        labeldado5.setBounds(825, 220, 150, 150);

        labeldado6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labeldado6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/dado6.png"))); // NOI18N
        getContentPane().add(labeldado6);
        labeldado6.setBounds(825, 220, 150, 150);

        labelfondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/data_img/FondoControles.png"))); // NOI18N
        getContentPane().add(labelfondo);
        labelfondo.setBounds(800, -1, 200, 672);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void ValidarLlegada(Jugador jugador, int i, Jugador pasivo, Jugador pasivo2) {
        switch (jugador.getPosicion()) {

            case 24:
                if (i == 6) {
                    jugador.setWin(true);
                }
                jugador.aumentarPosicion(i, pasivo, pasivo2);

                break;
            case 25:
                if (i <= 5) {
                    if (i == 5) {
                        jugador.setWin(true);
                    }
                    jugador.aumentarPosicion(i, pasivo, pasivo2);

                } else {
                    setPasar(true);
                    btnTirar.setEnabled(true);
                }
                break;
            case 26:
                if (i <= 4) {
                    if (i == 4) {
                        jugador.setWin(true);
                    }
                    jugador.aumentarPosicion(i, pasivo, pasivo2);

                } else {
                    setPasar(true);
                    btnTirar.setEnabled(true);
                }
                break;
            case 27:
                if (i <= 3) {
                    if (i == 3) {
                        jugador.setWin(true);
                    }
                    jugador.aumentarPosicion(i, pasivo, pasivo2);

                } else {
                    setPasar(true);
                    btnTirar.setEnabled(true);
                }
                break;
            case 28:
                if (i <= 2) {
                    if (i == 2) {
                        jugador.setWin(true);
                    }
                    jugador.aumentarPosicion(i, pasivo, pasivo2);

                } else {
                    setPasar(true);
                    btnTirar.setEnabled(true);
                }
                break;
            case 29:
                if (i == 1) {
                    jugador.setWin(true);
                    jugador.aumentarPosicion(i, pasivo, pasivo2);

                } else {
                    setPasar(true);
                    btnTirar.setEnabled(true);
                }
                break;
            default:
                jugador.aumentarPosicion(i, pasivo, pasivo2);
                break;
        }
    }

    public void Comparar(Jugador activo, Jugador pasivo, Jugador pasivo2) {
        if (activo.getPosicion() == pasivo.getPosicion() && pasivo.getPosicion() != 0) {
            pasivo.setPosicion(0);
            pasivo.setCarcel(true);
            JOptionPane.showMessageDialog(this, "El jugador " + pasivo.getNombre() + " ha sido enviado a la cárcel. ");
        }
        if (activo.getPosicion() == pasivo2.getPosicion() && pasivo2.getPosicion() != 0) {
            pasivo2.setPosicion(0);
            pasivo2.setCarcel(true);
            JOptionPane.showMessageDialog(this, "El jugador " + pasivo2.getNombre() + " ha sido enviado a la cárcel. ");
        }

    }

    private void Jugar(Jugador uno, Jugador dos, Jugador tres, int saltos) {
        if (!uno.isWin()) {
            ValidarLlegada(uno, saltos, dos, tres);
        }
        if (saltos == 6 && !uno.isWin()) {
            jugActivo = Integer.parseInt(uno.getNombre());
            seis++;
            if (seis == 3) {
                uno.setWin(true);
                seis = 0;
                if (!dos.isWin()) {
                    jugActivo = Integer.parseInt(dos.getNombre());

                } else if (!tres.isWin()) {
                    jugActivo = Integer.parseInt(tres.getNombre());

                } else {
                    //parar el juego porque solo queda uno
                    FinJuego.setVisible(true);
                }
            }
        } else {
            seis = 0;
            if (!dos.isWin()) {
                jugActivo = Integer.parseInt(dos.getNombre());

            } else if (!tres.isWin()) {
                jugActivo = Integer.parseInt(tres.getNombre());

            } else {
                //parar el juego porque solo queda uno
                FinJuego.setVisible(true);
            }
        }
    }

    private void JugarCarcel(Jugador activo, Jugador dos, Jugador tres, int saltos) {
        if (saltos == 6) {
            activo.setCarcel(false);
            intentos = 3;
            JOptionPane.showMessageDialog(this, "¡Has salido de la cárcel! Tira los dados para avanzar");
        } else if (intentos == 0) {
            if (!dos.isWin()) {
                jugActivo = Integer.parseInt(dos.getNombre());
            } else if (!tres.isWin()) {
                jugActivo = Integer.parseInt(tres.getNombre());

            } else {
                //parar el juego porque solo queda uno
                FinJuego.setVisible(true);
            }
            mostrarJugActivo();
            intentos = 3;
        }
        btnTirar.setEnabled(true);
    }
    private void btnMoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoverActionPerformed

        int saltos = Integer.parseInt(txtSaltos.getText());
        Jugador uno, dos, tres;
        uno = espacioJuego.getJug1();
        dos = espacioJuego.getJug2();
        tres = espacioJuego.getJug3();

        switch (jugActivo) {
            case 1:
                if (uno.isCarcel()) {
                    intentos--;
                    JugarCarcel(uno, dos, tres, saltos);

                } else {

                    Jugar(uno, dos, tres, saltos);
                }
                break;
            case 2:
                if (dos.isCarcel()) {
                    intentos--;
                    JugarCarcel(dos, tres, uno, saltos);

                } else {
                    Jugar(dos, tres, uno, saltos);
                }
                break;
            case 3:
                if (tres.isCarcel()) {
                    intentos--;
                    JugarCarcel(tres, uno, dos, saltos);

                } else {
                    Jugar(tres, uno, dos, saltos);
                }
                break;
        }
        if (isPasar()) {
            mostrarJugActivo();
            setPasar(false);
        }
//        btnTirar.setEnabled(true);
        btnMover.setEnabled(false);

    }//GEN-LAST:event_btnMoverActionPerformed

    public void mostrarJugActivo() {
        Jugador uno, dos, tres;
        uno = espacioJuego.getJug1();
        dos = espacioJuego.getJug2();
        tres = espacioJuego.getJug3();
        labelJugActivo.setText("" + jugActivo);
        String labelActivo = null;
        switch (jugActivo) {
            case 1:
                labelActivo = uno.getColor();
                break;
            case 2:
                labelActivo = dos.getColor();
                break;
            case 3:
                labelActivo = tres.getColor();
        }

        switch (labelActivo) {
            case "Rojo":
                labelImgRoja.setVisible(true);
                labelImgVerde.setVisible(false);
                labelImgAmarilla.setVisible(false);
                break;
            case "Amarillo":
                labelImgRoja.setVisible(false);
                labelImgVerde.setVisible(false);
                labelImgAmarilla.setVisible(true);
                break;
            case "Verde":
                labelImgRoja.setVisible(false);
                labelImgVerde.setVisible(true);
                labelImgAmarilla.setVisible(false);
        }
    }

    private void mostrarDado(int i) {
        if (labeldadoActivo != null) {
            labeldadoActivo.setVisible(false);
        }

        Runnable runnable = new Runnable() {
            @Override
            public void run() {
                try {
                    // hacemos que el hilo duerma
                    labeldadoGif.setVisible(true);
                    Thread.sleep(500);

                } catch (InterruptedException e) {
                    e.printStackTrace();
                }

                switch (i) {
                    case 1:
                        labeldadoActivo = labeldado1;
                        break;
                    case 2:
                        labeldadoActivo = labeldado2;
                        break;
                    case 3:
                        labeldadoActivo = labeldado3;
                        break;
                    case 4:
                        labeldadoActivo = labeldado4;
                        break;
                    case 5:
                        labeldadoActivo = labeldado5;
                        break;
                    case 6:
                        labeldadoActivo = labeldado6;

                }
                labeldadoGif.setVisible(false);
                labeldadoActivo.setVisible(true);

            }

        };
        Thread hilo = new Thread(runnable);
        hilo.start();

    }

    public void ValidaFinJuego() {
        if (ganadores.size() == 2) {
            Jugador perdedor;
            labelGan1.setIcon(new javax.swing.ImageIcon(getClass().getResource(ganadores.get(0).getDir().replace("src\\", "/"))));
            labelGan2.setIcon(new javax.swing.ImageIcon(getClass().getResource(ganadores.get(1).getDir().replace("src\\", "/"))));
            if (!ganadores.contains(espacioJuego.getJug1())) {
                perdedor = espacioJuego.getJug1();
            } else if (!ganadores.contains(espacioJuego.getJug2())) {
                perdedor = espacioJuego.getJug2();
            } else {
                perdedor = espacioJuego.getJug3();
            }
            labelPerd.setIcon(new javax.swing.ImageIcon(getClass().getResource(perdedor.getDir().replace("src\\", "/"))));
            FinJuego.setVisible(true);
        }
    }
    private void btnTirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTirarActionPerformed
        // TODO add your handling code here:        
        int s = (int) (Math.random() * 6 + 1);
        mostrarDado(s);
        txtSaltos.setText("" + s);
        btnTirar.setEnabled(false);
        btnMover.setEnabled(true);
    }//GEN-LAST:event_btnTirarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new MenuInicial().setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    public boolean isPasar() {
        return pasar;
    }

    public void setPasar(boolean pasar) {
        this.pasar = pasar;
    }

    public void addGanador(Jugador j) {
        ganadores.add(j);
    }

    public JButton getBtnTirar() {
        return btnTirar;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog FinJuego;
    private javax.swing.JButton btnMover;
    private javax.swing.JButton btnTirar;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel labelFondoFin;
    private javax.swing.JLabel labelGan1;
    private javax.swing.JLabel labelGan2;
    private javax.swing.JLabel labelImgAmarilla;
    private javax.swing.JLabel labelImgRoja;
    private javax.swing.JLabel labelImgVerde;
    private javax.swing.JLabel labelJugActivo;
    private javax.swing.JLabel labelPerd;
    private javax.swing.JLabel labeldado1;
    private javax.swing.JLabel labeldado2;
    private javax.swing.JLabel labeldado3;
    private javax.swing.JLabel labeldado4;
    private javax.swing.JLabel labeldado5;
    private javax.swing.JLabel labeldado6;
    private javax.swing.JLabel labeldadoGif;
    private javax.swing.JLabel labelfondo;
    private javax.swing.JTextField txtSaltos;
    // End of variables declaration//GEN-END:variables
}
